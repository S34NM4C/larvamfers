{"version":3,"sources":["config/index.js","utils/index.js","styles/globalStyles.js","styles/homepageStyles.js","icons/os-logo.svg","icons/etherscan-logo.svg","icons/twitter-logo.svg","components/LinkIcons.js","App.js","index.js"],"names":["NETWORK","LARVA_MFERS_CONTRACT_ADDRESS","ETHERSCAN_LINK","MAX_SUPPLY","FREE_MINT_SUPPLY_LIMIT","COST","getLarvaMfersContract","provider","ethers","Contract","abiLarvaMfers","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","FinePrint","ResponsiveWrapper","button","StyledLogo","img","StyledLink","a","LinkIcons","className","href","target","rel","src","svgOpenSeaLogo","alt","svgEtherscanLogo","svgTwitterLogo","App","useState","web3IsAvailable","setWeb3IsAvailable","isLoading","setIsLoading","activeAccount","setActiveAccount","larvaMferSupply","setLarvaMferSupply","freeMintIsActive","setFreeMintIsActive","paidMintIsActive","setPaidMintIsActive","mferTokenBalance","setMferTokenBalance","ladTokenBalance","setLadTokenBalance","amountInput","setAmountInput","useEffect","window","ethereum","alert","providers","Web3Provider","larvaMfersContract","mfersContract","abiMfers","getMfersContract","larvaLadsContract","abiLarvaLads","getLarvaLadsContract","totalSupply","then","result","utils","formatUnits","balanceOf","handleNumberInputChange","e","value","connectWallet","request","method","accounts","parseInt","networkVersion","length","on","location","reload","console","error","freeMint","signer","getSigner","active","supplyResult","supply","paidMint","costBigNum","parseEther","totalCost","mul","mint","style","padding","backgroundColor","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","onChange","defaultValue","min","max","type","borderradius","background","onClick","renderContent","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8664e0d9.chunk.js","sourcesContent":["export const NETWORK = {\n\tCHAIN_ID: 1,\n\tNAME: \"Mainnet\",\n\tSYMBOL: \"ETH\",\n};\nexport const GAS_LIMIT = 225000;\n\nexport const LARVA_MFERS_CONTRACT_ADDRESS =\n\t\"0xafe2c381c385cbbcbb570d8b39b36449be6b35c4\";\nexport const MFERS_CONTRACT_ADDRESS =\n\t\"0x79FCDEF22feeD20eDDacbB2587640e45491b757f\";\nexport const LARVA_LADS_CONTRACT_ADDRESS =\n\t\"0x5755Ab845dDEaB27E1cfCe00cd629B2e135Acc3d\";\n\nexport const ERC721_NAME = \"larva mfers\";\nexport const ERC721_SYMBOL = \"LARMF\";\n\nexport const ETHERSCAN_LINK =\n\t\"https://etherscan.io/address/0xafe2c381c385cbbcbb570d8b39b36449be6b35c4\";\nexport const OPENSEA_LINK = \"https://opensea.io/collection/larvamfers\";\nexport const TWITTER_LINK = \"https://twitter.com/LarvaMfers\";\n\nexport const MAX_SUPPLY = 10000;\nexport const FREE_MINT_SUPPLY_LIMIT = 5000;\nexport const HOLDER_MINT_SUPPLY_LIMIT = 2500;\n\nexport const MAX_FREE_MINT = 5;\nexport const MAX_PAID_MINT = 20;\n\nexport const COST = \"0.0069\";\n\n","import { ethers } from \"ethers\";\n\nimport abiLarvaMfers from \"../config/abi/larva-mfers.json\";\nimport abiMfers from \"../config/abi/mfers.json\";\nimport abiLarvaLads from \"../config/abi/larva-lads.json\";\n\nimport {\n\tLARVA_MFERS_CONTRACT_ADDRESS,\n\tMFERS_CONTRACT_ADDRESS,\n\tLARVA_LADS_CONTRACT_ADDRESS,\n} from \"../config\";\n\nexport const getLarvaMfersContract = provider => {\n\treturn new ethers.Contract(\n\t\tLARVA_MFERS_CONTRACT_ADDRESS,\n\t\tabiLarvaMfers,\n\t\tprovider\n\t);\n};\n\nexport const getMfersContract = provider => {\n\treturn new ethers.Contract(MFERS_CONTRACT_ADDRESS, abiMfers, provider);\n};\n\nexport const getLarvaLadsContract = provider => {\n\treturn new ethers.Contract(\n\t\tLARVA_LADS_CONTRACT_ADDRESS,\n\t\tabiLarvaLads,\n\t\tprovider\n\t);\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const FinePrint = styled.p`\n  color: var(--primary-text);\n  font-size: 10px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n\tpadding: 10px;\n\tborder-radius: 50px;\n\tborder: none;\n\tbackground-color: var(--secondary);\n\tpadding: 10px;\n\tfont-weight: bold;\n\tcolor: var(--secondary-text);\n\twidth: 100px;\n\tcursor: pointer;\n\tbox-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t-webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t-moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n`;\n\nexport const StyledRoundButton = styled.button`\n\tpadding: 10px;\n\tborder-radius: 100%;\n\tborder: none;\n\tbackground-color: var(--secondary);\n\tpadding: 10px;\n\tfont-weight: bold;\n\tfont-size: 15px;\n\tcolor: var(--secondary-text);\n\twidth: 30px;\n\theight: 30px;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbox-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n\t-webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n\t-moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n`;\n\nexport const ResponsiveWrapper = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tjustify-content: stretched;\n\talign-items: stretched;\n\twidth: 100%;\n\t@media (min-width: 767px) {\n\t\tflex-direction: row;\n\t}\n`;\n\nexport const StyledLogo = styled.img`\n\twidth: 100%;\n\ttransition: width 0.5s;\n\ttransition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n\tbox-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n\tborder: 4px dashed var(--secondary);\n\tbackground-color: var(--accent);\n\tborder-radius: 100%;\n\twidth: 200px;\n\t@media (min-width: 900px) {\n\t\twidth: 250px;\n\t}\n\t@media (min-width: 1000px) {\n\t\twidth: 300px;\n\t}\n\ttransition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n\tcolor: var(--secondary);\n\tfont-weight: bold;\n`;\n","export default __webpack_public_path__ + \"static/media/os-logo.a025b6dd.svg\";","export default __webpack_public_path__ + \"static/media/etherscan-logo.4d41c8e1.svg\";","export default __webpack_public_path__ + \"static/media/twitter-logo.3dca3c1c.svg\";","import { OPENSEA_LINK, ETHERSCAN_LINK, TWITTER_LINK } from \"../config\";\n\nimport svgOpenSeaLogo from \"../icons/os-logo.svg\";\nimport svgEtherscanLogo from \"../icons/etherscan-logo.svg\";\nimport svgTwitterLogo from \"../icons/twitter-logo.svg\";\n\nimport './link-icon.css'\n\n\n\nconst LinkIcons = () => {\n\treturn (\n\t\t<div className='linkGroup'>\n\t\t\t<a href={OPENSEA_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img src={svgOpenSeaLogo} alt=\"Opensea logo icon\" className='linkImg' />\n\t\t\t</a>\n\n\t\t\t<a href={ETHERSCAN_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={svgEtherscanLogo}\n\t\t\t\t\talt=\"Etherscan logo icon\"\n\t\t\t\t\tclassName='linkImg'\n\t\t\t\t/>\n\t\t\t</a>\n\n\t\t\t<a href={TWITTER_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img src={svgTwitterLogo} alt=\"Twitter logo icon\" className='linkImg' />\n\t\t\t</a>\n\t\t</div>\n\t);\n};\n\nexport default LinkIcons;\n","import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport {\n\tNETWORK,\n\tGAS_LIMIT,\n\tLARVA_MFERS_CONTRACT_ADDRESS,\n\tERC721_NAME,\n\tERC721_SYMBOL,\n\tETHERSCAN_LINK,\n\tOPENSEA_LINK,\n\tTWITTER_LINK,\n\tMAX_SUPPLY,\n\tFREE_MINT_SUPPLY_LIMIT,\n\tHOLDER_MINT_SUPPLY_LIMIT,\n\tMAX_FREE_MINT,\n\tMAX_PAID_MINT,\n\tCOST,\n\tWEI_COST,\n} from \"./config\";\n\nimport {\n\tgetLarvaMfersContract,\n\tgetMfersContract,\n\tgetLarvaLadsContract,\n} from \"./utils\";\n\nimport * as s from \"./styles/globalStyles\";\nimport {\n\tStyledLogo,\n\tResponsiveWrapper,\n\tStyledButton,\n\tStyledRoundButton,\n\tStyledLink,\n} from \"./styles/homepageStyles\";\n\nimport LinkIcons from \"./components/LinkIcons\";\n\nfunction App() {\n\tconst [web3IsAvailable, setWeb3IsAvailable] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [activeAccount, setActiveAccount] = useState();\n\n\tconst [larvaMferSupply, setLarvaMferSupply] = useState();\n\tconst [freeMintIsActive, setFreeMintIsActive] = useState();\n\tconst [paidMintIsActive, setPaidMintIsActive] = useState();\n\n\tconst [mferTokenBalance, setMferTokenBalance] = useState();\n\tconst [ladTokenBalance, setLadTokenBalance] = useState();\n\n\tconst [amountInput, setAmountInput] = useState('1');\n\n\t// Check if the browser supports wallet on page load\n\tuseEffect(() => {\n\t\tif (!!window && !!window.ethereum) {\n\t\t\tsetWeb3IsAvailable(true);\n\t\t} else {\n\t\t\talert(\"Heads up! you need to install Metamask to use this app\");\n\t\t}\n\t}, []);\n\n\t// Fetch required contract states when valid account becomes available\n\tuseEffect(() => {\n\t\tif (!!activeAccount) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst larvaMfersContract = getLarvaMfersContract(provider);\n\t\t\tconst mfersContract = getMfersContract(provider);\n\t\t\tconst larvaLadsContract = getLarvaLadsContract(provider);\n\n\t\t\t// Get total larva mfer supply\n\t\t\tlarvaMfersContract.totalSupply().then(result => {\n\t\t\t\tsetLarvaMferSupply(ethers.utils.formatUnits(result, 0));\n\t\t\t});\n\n\t\t\t// Get free mint state\n\t\t\tlarvaMfersContract.freeMintIsActive().then(result => {\n\t\t\t\tsetFreeMintIsActive(result);\n\t\t\t});\n\n\t\t\t// Get paid mint state\n\t\t\tlarvaMfersContract.paidMintIsActive().then(result => {\n\t\t\t\tsetPaidMintIsActive(result);\n\t\t\t});\n\n\t\t\t// Check wallet for mfers\n\t\t\tmfersContract.balanceOf(activeAccount).then(result => {\n\t\t\t\tsetMferTokenBalance(ethers.utils.formatUnits(result, 0));\n\t\t\t});\n\n\t\t\t// Check wallet for Larva Lads\n\t\t\tlarvaLadsContract.balanceOf(activeAccount).then(result => {\n\t\t\t\tsetLadTokenBalance(ethers.utils.formatUnits(result, 0));\n\t\t\t});\n\t\t}\n\t}, [activeAccount]);\n\n\tconst handleNumberInputChange = e => setAmountInput(e.target.value);\n\n\tconst connectWallet = async () => {\n\t\tif (web3IsAvailable) {\n\t\t\tsetIsLoading(true);\n\t\t\ttry {\n\t\t\t\tconst accounts = await window.ethereum.request({\n\t\t\t\t\tmethod: \"eth_requestAccounts\",\n\t\t\t\t});\n\n\t\t\t\tif (parseInt(window.ethereum.networkVersion) !== NETWORK.CHAIN_ID) {\n\t\t\t\t\talert(\n\t\t\t\t\t\t\"Invalid chain detected - must connect to the Ethereum Mainnet!\"\n\t\t\t\t\t);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accounts.length > 0) {\n\t\t\t\t\tsetActiveAccount(accounts[0]);\n\t\t\t\t\twindow.ethereum.on(\"accountsChanged\", () => window.location.reload());\n\t\t\t\t\twindow.ethereum.on(\"chainChanged\", () => window.location.reload());\n\t\t\t\t} else {\n\t\t\t\t\talert(\"No valid Ethereum addresses found!\");\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\talert(\"Error connecting wallet! Are you logged in to MetaMask?\");\n\t\t\t}\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\tconst freeMint = async () => {\n\t\ttry {\n\t\t\tif (amountInput > MAX_FREE_MINT) {\n\t\t\t\talert(\"Amount cannot be more than max free mint limit!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetIsLoading(true);\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst larvaMfersContract = getLarvaMfersContract(signer);\n\n\t\t\tconst active = await larvaMfersContract.freeMintIsActive();\n\t\t\tconst supplyResult = await larvaMfersContract.totalSupply();\n\t\t\tconst supply = ethers.utils.formatUnits(supplyResult, 0);\n\n\t\t\tif (!active) {\n\t\t\t\talert(\"Unable to complete - free mint not active!\");\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (supply >= FREE_MINT_SUPPLY_LIMIT) {\n\t\t\t\talert(\"Unable to complete - no free mints remaining!\");\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait larvaMfersContract.freeMint(amountInput);\n\n\t\t\tsetIsLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\talert(\"Error running the free mint function - check the console...\");\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\tconst paidMint = async () => {\n\t\ttry {\n\t\t\tif (amountInput > MAX_PAID_MINT) {\n\t\t\t\talert(\"Amount cannot be more than max mint limit!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst larvaMfersContract = getLarvaMfersContract(signer);\n\n\t\t\tconst active = await larvaMfersContract.freeMintIsActive();\n\t\t\tconst supplyResult = await larvaMfersContract.totalSupply();\n\t\t\tconst supply = ethers.utils.formatUnits(supplyResult, 0);\n\n\t\t\tif (!active) {\n\t\t\t\talert(\"Unable to complete - mint not active!\");\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (supply >= MAX_SUPPLY) {\n\t\t\t\talert(\"Unable to complete - no available tokens remaining!\");\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst costBigNum = ethers.utils.parseEther(COST);\n\t\t\tconst totalCost = costBigNum.mul(parseInt(amountInput));\n\n\t\t\tawait larvaMfersContract.mint(amountInput, {\n\t\t\t\tvalue: totalCost,\n\t\t\t});\n\n\t\t\tsetIsLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\talert(\"Error running the mint function - check the console...\");\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\tconst renderContent = () => {\n\t\tif (!web3IsAvailable) {\n\t\t\treturn (\n\t\t\t\t<h1>\n\t\t\t\t\tplease install{\" \"}\n\t\t\t\t\t<a href=\"https://metamask.io\" target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\tmetamask\n\t\t\t\t\t</a>\n\t\t\t\t</h1>\n\t\t\t);\n\t\t}\n\n\t\tif (isLoading) {\n\t\t\treturn <h1>LOADING...</h1>;\n\t\t}\n\n\t\tif (!activeAccount) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<button style={{\n\t\t\t\t\t\tpadding: \"10px\",\n\t\t\t\t\t\tborderradius: \"50px\",\n\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\tbackground: \"dodgerblue\",\n\t\t\t\t\t\tpadding: \"12px\",\n\t\t\t\t\t\tfontSize: \"16px\",\n\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\tcolor: \"000000\",\n\t\t\t\t\t\twidth: \"100px\",\n\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\tboxshadow: \"0px 6px 0px -2px rgba(250, 250, 250, 0.3)\",\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={() => connectWallet()}>connect wallet</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (!freeMintIsActive || !paidMintIsActive) {\n\t\t\treturn <div><p style={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tfontSize: 18,\n\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t  }}\n\t\t\t>mint not active! come back later...</p></div>;\n\t\t}\n\n\t\t// FREE HOLDER MINT\n\t\tif (larvaMferSupply < HOLDER_MINT_SUPPLY_LIMIT) {\n\t\t\treturn (\n\t\t\t\t<div><p style={{\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t  }}\n\t\t\t\t>\n\t\t\t\t\t<p>wallet connected:</p>\n\t\t\t\t\t<code>{activeAccount}</code>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tmfers owned: <code>{mferTokenBalance}</code>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tlarva lads owned: <code>{ladTokenBalance}</code>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>supply:</p>\n\t\t\t\t\t<code>{`${larvaMferSupply}/${MAX_SUPPLY}`}</code></p>\n\t\t\t\t\t<hr />\n\n\t\t\t\t\t{mferTokenBalance > 0 || ladTokenBalance > 0 ? (\n\t\t\t\t\t\t<div><p style={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\t  }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{mferTokenBalance > 0 && (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<em>mfer hodler detected!</em>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{ladTokenBalance > 0 && (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<em>larva lad hodler detected!</em>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}</p>\n\t\t\t\t\t\t\t<h3>free mint!</h3>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={handleNumberInputChange}\n\t\t\t\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={MAX_FREE_MINT}\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button style={{\n\t\t\t\t\t\t\t\t\t\tpadding: \"10px\",\n\t\t\t\t\t\t\t\t\t\tborderradius: \"50px\",\n\t\t\t\t\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\t\t\t\t\tbackground: \"dodgerblue\",\n\t\t\t\t\t\t\t\t\t\tpadding: \"12px\",\n\t\t\t\t\t\t\t\t\t\tfontSize: \"16px\",\n\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t\t\t\tcolor: \"000000\",\n\t\t\t\t\t\t\t\t\t\twidth: \"100px\",\n\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\tboxshadow: \"0px 6px 0px -2px rgba(250, 250, 250, 0.3)\",\n\t\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\tonClick={() => freeMint()}>mint</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div><p style={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\t  }}\n\t\t\t\t\t\t>mint currently for mfer and larva lad hodlers only!</p></div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t// PUBLIC FREE MINT\n\t\tif (\n\t\t\tlarvaMferSupply >= HOLDER_MINT_SUPPLY_LIMIT &&\n\t\t\tlarvaMferSupply < FREE_MINT_SUPPLY_LIMIT\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div><p style={{\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t  }}\n\t\t\t\t\t>\n\t\t\t\t\t<p>wallet connected:</p>\n\t\t\t\t\t<code>{activeAccount}</code>\n\t\t\t\t\t<p>supply:</p>\n\t\t\t\t\t<code>{`${larvaMferSupply}/${MAX_SUPPLY}`}</code></p>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h3>free mint!</h3>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={handleNumberInputChange}\n\t\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={MAX_FREE_MINT}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button style={{\n\t\t\t\t\t\tpadding: \"10px\",\n\t\t\t\t\t\tborderradius: \"50px\",\n\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\tbackground: \"dodgerblue\",\n\t\t\t\t\t\tpadding: \"12px\",\n\t\t\t\t\t\tfontSize: \"16px\",\n\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\tcolor: \"000000\",\n\t\t\t\t\t\twidth: \"100px\",\n\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\tboxshadow: \"0px 6px 0px -2px rgba(250, 250, 250, 0.3)\",\n\t\t\t\t\t}}\n\t\t\t\t\t\n\t\t\t\t\tonClick={() => freeMint()}>mint</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t// PUBLIC PAID MINT\n\t\tif (\n\t\t\tlarvaMferSupply >= FREE_MINT_SUPPLY_LIMIT &&\n\t\t\tlarvaMferSupply < MAX_SUPPLY\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div><p style={{\n\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t  }}\n\t\t\t\t\t>\n\t\t\t\t\t<p>wallet connected:</p>\n\t\t\t\t\t<code>{activeAccount}</code>\n\t\t\t\t\t<p>supply:</p>\n\t\t\t\t\t<code>{`${larvaMferSupply}/${MAX_SUPPLY}`}</code></p>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h3>* paid mint! *</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<em>only</em> {COST} ETH!\n\t\t\t\t\t</p>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={handleNumberInputChange}\n\t\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={MAX_PAID_MINT}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button style={{\n\t\t\t\t\t\tpadding: \"10px\",\n\t\t\t\t\t\tborderradius: \"50px\",\n\t\t\t\t\t\tborder: \"none\",\n\t\t\t\t\t\tbackground: \"dodgerblue\",\n\t\t\t\t\t\tpadding: \"12px\",\n\t\t\t\t\t\tfontSize: \"16px\",\n\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\tcolor: \"000000\",\n\t\t\t\t\t\twidth: \"100px\",\n\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\tboxShadow: \"0px 6px 0px -2px rgba(250, 250, 250, 0.3)\",\n\t\t\t\t\t}}\t\t\t\t\t\n\t\t\t\t\tonClick={() => paidMint()}>mint</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\t// DEFAULT (max supply reached)\n\t\treturn (\n\t\t\t<div><p style={{\n\t\t\t\ttextAlign: \"center\",\n\t\t\t\tfontSize: 18,\n\t\t\t\t  }}\n\t\t\t\t>\n\t\t\t\t<p>wallet connected:</p>\n\t\t\t\t<code>{activeAccount}</code>\n\t\t\t\t<p>supply:</p>\n\t\t\t\t<code>{`${larvaMferSupply}/${MAX_SUPPLY}`}</code></p>\n\t\t\t\t<hr />\n\t\t\t\t<h3>max supply reached!</h3>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<s.Screen>\n\t\t\t<s.Container\n\t\t\t\tflex={1}\n\t\t\t\tai={\"center\"}\n\t\t\t\tstyle={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n\t\t\t>\n\t\t\t\t<StyledLogo alt={\"logo\"} src={\"/images/larvamferbanner.png\"} />\n\t\t\t\t<s.SpacerSmall />\n\t\t\t\t<ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n\t\t\t\t\t<s.Container\n\t\t\t\t\t\tflex={2}\n\t\t\t\t\t\tjc={\"center\"}\n\t\t\t\t\t\tai={\"center\"}\n\t\t\t\t\t\timage={\"/images/larvamferbest.png\"}\n\t\t\t\t\t></s.Container>\n\t\t\t\t\t<s.SpacerLarge />\n\t\t\t\t\t<s.Container\n\t\t\t\t\t\tflex={2}\n\t\t\t\t\t\tjc={\"center\"}\n\t\t\t\t\t\tai={\"center\"}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: \"var(--accent)\",\n\t\t\t\t\t\t\tpadding: 24,\n\t\t\t\t\t\t\tborderRadius: 24,\n\t\t\t\t\t\t\tborder: \"4px ridge var(--secondary)\",\n\t\t\t\t\t\t\tboxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t<s.TextTitle\n              \t\t\tstyle={{\n                \t\ttextAlign: \"center\",\n                \t\tfontSize: 60,\n                \t\tfontWeight: \"bold\",\n                \t\tcolor: \"var(--accent-text)\",\n              \t\t\t}}\n            \t\t>\n              \t\t\tLARVA MFERS\n            \t\t</s.TextTitle>\n            \t\t<s.TextTitle\n            \t\t\tstyle={{\n              \t\t\t\ttextAlign: \"center\",\n              \t\t\t\tcolor: \"var(--primary-text)\",\n            \t\t\t}}\n          \t\t\t>\n            \t\t\tby computerart.eth\n          \t\t\t</s.TextTitle>\n            \t\t<s.SpacerXSmall />\n                \t<s.TextTitle\n                  \t\tstyle={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                \t>\n                  \t\tpeep the contract below\n                  \t</s.TextTitle>\n                  \t<s.TextTitle\n                  \t\tstyle={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                \t>\n                  \t\t(zhoug.eth recommends 2 helpings of D.Y.O.R. a day!!) \n                  \t</s.TextTitle>\n\t\t\t\t\t<s.SpacerSmall />\n              \t\t<StyledLink target={\"_blank\"} href={ETHERSCAN_LINK}>\n                \t\t{LARVA_MFERS_CONTRACT_ADDRESS}\n              \t\t</StyledLink>\n\t\t\t\t\t<s.SpacerSmall />\n\t\t\t\t\t\t{renderContent()}\n\t\t\t\t\t\t\n\t\t\t\t\t</s.Container>\n\t\t\t\t\t<s.SpacerLarge />\n\t\t\t\t\t<s.Container\n\t\t\t\t\t\tflex={2}\n\t\t\t\t\t\tjc={\"center\"}\n\t\t\t\t\t\tai={\"center\"}\n\t\t\t\t\t\timage={\"/images/bargain_bin_meme.png\"}\n\t\t\t\t\t></s.Container>\n\t\t\t\t</ResponsiveWrapper>\n\n\t\t\t\t<LinkIcons/>\n\t\t\t\t<s.SpacerSmall />\n\t\t\t\t<s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n\t\t\t\t\t<s.TextDescription>\n\t\t\t\t\t\tLARVA MFERS r generated entirely from hand drawings by\n\t\t\t\t\t\tcomputerart.eth. this project is in the public domain;\n\t\t\t\t\t</s.TextDescription>\n\t\t\t\t\t<s.TextDescription>\n\t\t\t\t\t\tfeel free to use LARVA MFERS any way u want. inspired by sartoshi.\n\t\t\t\t\t\timage engine and contract by zhoug.eth. memes by kml. site by s34nm4c.eth\n\t\t\t\t\t</s.TextDescription>\n\t\t\t\t\t<s.SpacerSmall />\n\t\t\t\t\t<s.FinePrint\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tcolor: \"var(--primary-text)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t* please make sure you are connected to the right network (\n\t\t\t\t\t\t{NETWORK.NAME} Mainnet) and the correct address.\n\t\t\t\t\t</s.FinePrint>\n\t\t\t\t\t<s.FinePrint\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tcolor: \"var(--primary-text)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t** please note: once you make the purchase, you cannot undo this\n\t\t\t\t\t\taction.\n\t\t\t\t\t</s.FinePrint>\n\t\t\t\t</s.Container>\n\t\t\t</s.Container>\n\t\t</s.Screen>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}