{"version":3,"sources":["utils/index.js","config/index.js","styles/globalStyles.js","styles/homepageStyles.js","icons/os-logo.svg","icons/etherscan-logo.svg","icons/twitter-logo.svg","components/LinkIcons.js","App.js","index.js"],"names":["getLarvaMfersContract","provider","ethers","Contract","abiLarvaMfers","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextSubTitle","TextDescription","ResponsiveWrapper","button","StyledLogo","img","StyledLink","a","LinkIcons","className","href","target","rel","src","svgOpenSeaLogo","alt","svgEtherscanLogo","svgTwitterLogo","App","useState","setWeb3IsAvailable","activeAccount","setLarvaMferSupply","setFreeMintIsActive","setPaidMintIsActive","setMferTokenBalance","setLadTokenBalance","useEffect","window","ethereum","alert","providers","Web3Provider","larvaMfersContract","mfersContract","abiMfers","getMfersContract","larvaLadsContract","abiLarvaLads","getLarvaLadsContract","totalSupply","then","result","utils","formatUnits","freeMintIsActive","paidMintIsActive","balanceOf","style","padding","backgroundColor","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b39d742.chunk.js","sourcesContent":["import { ethers } from \"ethers\";\n\nimport abiLarvaMfers from \"../config/abi/larva-mfers.json\";\nimport abiMfers from \"../config/abi/mfers.json\";\nimport abiLarvaLads from \"../config/abi/larva-lads.json\";\n\nimport {\n\tLARVA_MFERS_CONTRACT_ADDRESS,\n\tMFERS_CONTRACT_ADDRESS,\n\tLARVA_LADS_CONTRACT_ADDRESS,\n} from \"../config\";\n\nexport const getLarvaMfersContract = provider => {\n\treturn new ethers.Contract(\n\t\tLARVA_MFERS_CONTRACT_ADDRESS,\n\t\tabiLarvaMfers,\n\t\tprovider\n\t);\n};\n\nexport const getMfersContract = provider => {\n\treturn new ethers.Contract(MFERS_CONTRACT_ADDRESS, abiMfers, provider);\n};\n\nexport const getLarvaLadsContract = provider => {\n\treturn new ethers.Contract(\n\t\tLARVA_LADS_CONTRACT_ADDRESS,\n\t\tabiLarvaLads,\n\t\tprovider\n\t);\n};\n","export const NETWORK = {\n\tCHAIN_ID: 1,\n\tNAME: \"Mainnet\",\n\tSYMBOL: \"ETH\",\n};\nexport const GAS_LIMIT = 225000;\n\nexport const LARVA_MFERS_CONTRACT_ADDRESS =\n\t\"0xafe2c381c385cbbcbb570d8b39b36449be6b35c4\";\nexport const MFERS_CONTRACT_ADDRESS =\n\t\"0x79FCDEF22feeD20eDDacbB2587640e45491b757f\";\nexport const LARVA_LADS_CONTRACT_ADDRESS =\n\t\"0x5755Ab845dDEaB27E1cfCe00cd629B2e135Acc3d\";\n\nexport const ERC721_NAME = \"larva mfers\";\nexport const ERC721_SYMBOL = \"LARMF\";\n\nexport const ETHERSCAN_LINK =\n\t\"https://etherscan.io/address/0xafe2c381c385cbbcbb570d8b39b36449be6b35c4\";\nexport const OPENSEA_LINK = \"https://opensea.io/collection/larvamfers\";\nexport const TWITTER_LINK = \"https://twitter.com/LarvaMfers\";\nexport const MEDIUM_LINK = \"https://medium.com/@kevimlee/larva-mfers-75a682d5a288\"\n\nexport const MAX_SUPPLY = 10000;\nexport const FREE_MINT_SUPPLY_LIMIT = 5000;\nexport const HOLDER_MINT_SUPPLY_LIMIT = 2500;\n\nexport const MAX_FREE_MINT = 5;\nexport const MAX_PAID_MINT = 20;\n\nexport const COST = \"0.0069\";\n\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const FinePrint = styled.p`\n  color: var(--primary-text);\n  font-size: 10px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n\tpadding: 10px;\n\tborder-radius: 50px;\n\tborder: none;\n\tbackground-color: var(--secondary);\n\tpadding: 10px;\n\tfont-weight: bold;\n\tcolor: var(--secondary-text);\n\twidth: 100px;\n\tcursor: pointer;\n\tbox-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t-webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t-moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n`;\n\nexport const StyledRoundButton = styled.button`\n\tpadding: 10px;\n\tborder-radius: 100%;\n\tborder: none;\n\tbackground-color: var(--secondary);\n\tpadding: 10px;\n\tfont-weight: bold;\n\tfont-size: 15px;\n\tcolor: var(--secondary-text);\n\twidth: 30px;\n\theight: 30px;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tbox-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n\t-webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n\t-moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n\t:active {\n\t\tbox-shadow: none;\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t}\n`;\n\nexport const ResponsiveWrapper = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tjustify-content: stretched;\n\talign-items: stretched;\n\twidth: 100%;\n\t@media (min-width: 767px) {\n\t\tflex-direction: row;\n\t}\n`;\n\nexport const StyledLogo = styled.img`\n\twidth: 100%;\n\ttransition: width 0.5s;\n\ttransition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n\tbox-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n\tborder: 4px dashed var(--secondary);\n\tbackground-color: var(--accent);\n\tborder-radius: 100%;\n\twidth: 200px;\n\t@media (min-width: 900px) {\n\t\twidth: 250px;\n\t}\n\t@media (min-width: 1000px) {\n\t\twidth: 300px;\n\t}\n\ttransition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n\tcolor: var(--secondary);\n\tfont-weight: bold;\n`;\n","export default __webpack_public_path__ + \"static/media/os-logo.a025b6dd.svg\";","export default __webpack_public_path__ + \"static/media/etherscan-logo.4d41c8e1.svg\";","export default __webpack_public_path__ + \"static/media/twitter-logo.3dca3c1c.svg\";","import { OPENSEA_LINK, ETHERSCAN_LINK, TWITTER_LINK } from \"../config\";\n\nimport svgOpenSeaLogo from \"../icons/os-logo.svg\";\nimport svgEtherscanLogo from \"../icons/etherscan-logo.svg\";\nimport svgTwitterLogo from \"../icons/twitter-logo.svg\";\n\nimport './link-icon.css'\n\n\n\nconst LinkIcons = () => {\n\treturn (\n\t\t<div className='linkGroup'>\n\t\t\t<a href={OPENSEA_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img src={svgOpenSeaLogo} alt=\"Opensea logo icon\" className='linkImg' />\n\t\t\t</a>\n\n\t\t\t<a href={ETHERSCAN_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img\n\t\t\t\t\tsrc={svgEtherscanLogo}\n\t\t\t\t\talt=\"Etherscan logo icon\"\n\t\t\t\t\tclassName='linkImg'\n\t\t\t\t/>\n\t\t\t</a>\n\n\t\t\t<a href={TWITTER_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t<img src={svgTwitterLogo} alt=\"Twitter logo icon\" className='linkImg' />\n\t\t\t</a>\n\t\t</div>\n\t);\n};\n\nexport default LinkIcons;\n","import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport {\n\tNETWORK,\n\tGAS_LIMIT,\n\tLARVA_MFERS_CONTRACT_ADDRESS,\n\tERC721_NAME,\n\tERC721_SYMBOL,\n\tETHERSCAN_LINK,\n\tOPENSEA_LINK,\n\tTWITTER_LINK,\n\tMAX_SUPPLY,\n\tFREE_MINT_SUPPLY_LIMIT,\n\tHOLDER_MINT_SUPPLY_LIMIT,\n\tMAX_FREE_MINT,\n\tMAX_PAID_MINT,\n\tCOST,\n\tWEI_COST,\n\tMEDIUM_LINK,\n} from \"./config\";\n\nimport {\n\tgetLarvaMfersContract,\n\tgetMfersContract,\n\tgetLarvaLadsContract,\n} from \"./utils\";\n\nimport * as s from \"./styles/globalStyles\";\nimport {\n\tStyledLogo,\n\tResponsiveWrapper,\n\tStyledButton,\n\tStyledRoundButton,\n\tStyledLink,\n} from \"./styles/homepageStyles\";\n\nimport LinkIcons from \"./components/LinkIcons\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nfunction App() {\n\tconst [web3IsAvailable, setWeb3IsAvailable] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [activeAccount, setActiveAccount] = useState();\n\n\tconst [larvaMferSupply, setLarvaMferSupply] = useState();\n\tconst [freeMintIsActive, setFreeMintIsActive] = useState();\n\tconst [paidMintIsActive, setPaidMintIsActive] = useState();\n\n\tconst [mferTokenBalance, setMferTokenBalance] = useState();\n\tconst [ladTokenBalance, setLadTokenBalance] = useState();\n\n\tconst [amountInput, setAmountInput] = useState('1');\n\n\t// Check if the browser supports wallet on page load\n\tuseEffect(() => {\n\t\tif (!!window && !!window.ethereum) {\n\t\t\tsetWeb3IsAvailable(true);\n\t\t} else {\n\t\t\talert(\"Heads up! you need to install Metamask to use this app\");\n\t\t}\n\t}, []);\n\n\t// Fetch required contract states when valid account becomes available\n\tuseEffect(() => {\n\t\tif (!!activeAccount) {\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst larvaMfersContract = getLarvaMfersContract(provider);\n\t\t\tconst mfersContract = getMfersContract(provider);\n\t\t\tconst larvaLadsContract = getLarvaLadsContract(provider);\n\n\t\t\t// Get total larva mfer supply\n\t\t\tlarvaMfersContract.totalSupply().then(result => {\n\t\t\t\tsetLarvaMferSupply(ethers.utils.formatUnits(result, 0));\n\t\t\t});\n\n\t\t\t// Get free mint state\n\t\t\tlarvaMfersContract.freeMintIsActive().then(result => {\n\t\t\t\tsetFreeMintIsActive(result);\n\t\t\t});\n\n\t\t\t// Get paid mint state\n\t\t\tlarvaMfersContract.paidMintIsActive().then(result => {\n\t\t\t\tsetPaidMintIsActive(result);\n\t\t\t});\n\n\t\t\t// Check wallet for mfers\n\t\t\tmfersContract.balanceOf(activeAccount).then(result => {\n\t\t\t\tsetMferTokenBalance(ethers.utils.formatUnits(result, 0));\n\t\t\t});\n\n\t\t\t// Check wallet for Larva Lads\n\t\t\tlarvaLadsContract.balanceOf(activeAccount).then(result => {\n\t\t\t\tsetLadTokenBalance(ethers.utils.formatUnits(result, 0));\n\t\t\t});\n\t\t}\n\t}, [activeAccount]);\n\n\tconst handleNumberInputChange = e => setAmountInput(e.target.value);\n\n\tconst connectWallet = async () => {\n\t\tif (web3IsAvailable) {\n\t\t\tsetIsLoading(true);\n\t\t\ttry {\n\t\t\t\tconst accounts = await window.ethereum.request({\n\t\t\t\t\tmethod: \"eth_requestAccounts\",\n\t\t\t\t});\n\n\t\t\t\tif (parseInt(window.ethereum.networkVersion) !== NETWORK.CHAIN_ID) {\n\t\t\t\t\talert(\n\t\t\t\t\t\t\"Invalid chain detected - must connect to the Ethereum Mainnet!\"\n\t\t\t\t\t);\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accounts.length > 0) {\n\t\t\t\t\tsetActiveAccount(accounts[0]);\n\t\t\t\t\twindow.ethereum.on(\"accountsChanged\", () => window.location.reload());\n\t\t\t\t\twindow.ethereum.on(\"chainChanged\", () => window.location.reload());\n\t\t\t\t} else {\n\t\t\t\t\talert(\"No valid Ethereum addresses found!\");\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\talert(\"Error connecting wallet! Are you logged in to MetaMask?\");\n\t\t\t}\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\tconst paidMint = async () => {\n\t\ttry {\n\t\t\tif (amountInput > MAX_PAID_MINT) {\n\t\t\t\talert(\"Amount cannot be more than max mint limit!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\t\t\tconst signer = provider.getSigner();\n\t\t\tconst larvaMfersContract = getLarvaMfersContract(signer);\n\n\t\t\tconst active = await larvaMfersContract.paidMintIsActive();\n\t\t\tconst supplyResult = await larvaMfersContract.totalSupply();\n\t\t\tconst supply = ethers.utils.formatUnits(supplyResult, 0);\n\n\t\t\tif (!active) {\n\t\t\t\talert(\"Unable to complete - mint not active!\");\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (supply >= MAX_SUPPLY) {\n\t\t\t\talert(\"Unable to complete - no available tokens remaining!\");\n\t\t\t\tsetIsLoading(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst costBigNum = ethers.utils.parseEther(COST);\n\t\t\tconst totalCost = costBigNum.mul(parseInt(amountInput));\n\n\t\t\tawait larvaMfersContract.mint(amountInput, {\n\t\t\t\tvalue: totalCost,\n\t\t\t});\n\n\t\t\tsetIsLoading(false);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\talert(\"Error running the mint function - check the console...\");\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<s.Screen>\n\t\t\t<s.Container\n\t\t\t\tflex={1}\n\t\t\t\tai={\"center\"}\n\t\t\t\tstyle={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n\t\t\t>\n\t\t\t\t<StyledLogo alt={\"logo\"} src={\"/images/larvamferbanner.png\"} />\n\t\t\t\t<s.SpacerSmall />\n\t\t\t\t<ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n\t\t\t\t\t<s.Container\n\t\t\t\t\t\tflex={2}\n\t\t\t\t\t\tjc={\"center\"}\n\t\t\t\t\t\tai={\"center\"}\n\t\t\t\t\t\timage={\"/images/larvamferbest.png\"}\n\t\t\t\t\t></s.Container>\n\t\t\t\t\t<s.SpacerLarge />\n\t\t\t\t\t<s.Container\n\t\t\t\t\t\tflex={2}\n\t\t\t\t\t\tjc={\"center\"}\n\t\t\t\t\t\tai={\"center\"}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: \"var(--accent)\",\n\t\t\t\t\t\t\tpadding: 24,\n\t\t\t\t\t\t\tborderRadius: 24,\n\t\t\t\t\t\t\tborder: \"4px ridge var(--secondary)\",\n\t\t\t\t\t\t\tboxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t<s.TextTitle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tfontSize: 60,\n\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\tcolor: \"var(--accent-text)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n              \t\t\tLARVA MFERS\n            \t\t</s.TextTitle>\n\t\t\t\t\t<s.TextSubTitle\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\tfontSize: 24,\n\t\t\t\t\t\tcolor: \"var(--primary-text)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n            \t\t\tby computerart.eth\n          \t\t\t</s.TextSubTitle>\n\t\t\t\t\t  <s.SpacerSmall />\n\t\t\t\t\t<s.TextTitle style={{ textAlign: \"center\",fontWeight: \"bold\",}}>\n\t\t\t\t\t** MINT IS NOW CLOSED **<br />\n\n\t\t\t\t\tlarva mfers will be hatching the night of 3/11 <br />\n\t\t\t\t\t</s.TextTitle>\t\n\t\t\t\t\t<s.TextDescription>\n\t\t\t\t\t(larva mfers can be purchased off of OpenSea)\n\t\t\t\t\t</s.TextDescription>\n\t\t\t\t\t<s.Container \n\t\t\t\t\t\tflex={2} \n\t\t\t\t\t\tjc={\"center\"} \n\t\t\t\t\t\tai={\"center\"} \n\t\t\t\t\t\timage={\"/images/egg_gif.gif\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t</s.Container>\t\t\t\t\t\t\n\t\t\t\t\t</s.Container>\n\t\t\t\t\t<s.SpacerLarge />\n\t\t\t\t\t<s.Container\n\t\t\t\t\t\tflex={2}\n\t\t\t\t\t\tjc={\"center\"}\n\t\t\t\t\t\tai={\"center\"}\n\t\t\t\t\t\timage={\"/images/bargain_bin_meme.png\"}\n\t\t\t\t\t></s.Container>\n\t\t\t\t</ResponsiveWrapper>\n\n\t\t\t\t<LinkIcons/>\n\t\t\t\t<s.SpacerSmall />\n\t\t\t\t<StyledLink target={\"_blank\"} href={MEDIUM_LINK}>\n                \t\tmedium whitepaper\n              \t\t</StyledLink>\n\t\t\t\t<s.SpacerMedium />\n\t\t\t\t<s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n\t\t\t\t\t<s.TextDescription style={{ textAlign: \"center\",}}>\n\t\t\t\t\t\tLARVA MFERS r generated entirely from hand drawings by computerart.eth. <br />\n\t\t\t\t\t\tthis project is in the public domain; feel free to use LARVA MFERS any way u want. <br />\n\t\t\t\t\t\tinspired by sartoshi. image engine and contract by zhoug.eth. memes by kml. site by s34nm4c.eth\n\t\t\t\t\t</s.TextDescription>\n\t\t\t\t\t<s.SpacerSmall />\n\t\t\t\t\t\n\t\t\t\t</s.Container>\n\t\t\t</s.Container>\n\t\t</s.Screen>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}